@page "/lesson/{LessonId:int}"

@inject Service.LessonDefinitionBackendAccessService LessonDefinitionService
@inject Service.LessonProfileDefinitionBackendAccessService LessonProfileDefinitionService
@inject NavigationManager navigation
@* ------------- Display Helping Hands on the top right  -------------------*@
<div class="float-right">

    @if (buttonPressed)
    {
        <button type="button" class="btn-add-helper" @onclick="() => addUserToHelpingHands()">
            <img src="css\images\helpingbutton_active.png" alt="helping hands" height="65" />
            <br />
            <span style="font-size:x-small">You are a helping hand!</span>
        </button>
    }
    else
    {
        <button type="button" class="btn-add-helper" @onclick="() => removeUserFromHelpingHands()">
            <img src="css\images\helpingbutton_deactive.png" alt="no helping hand yet" height="65" />
            <br />
            <span style="font-size:x-small">Click to become a helping hand!</span>
        </button>
    }
</div>
@* ------------- Display Helpers on the top right  -------------------*@

@if (!showHelpersButtonPressed)
{
    <div class="float-right">
        <button class="btn-add-helper" @onclick="() => getLessonHelpersProfiles()">
            <img src="css\images\LeftArrow.png" alt="show helping hands" class="rounded-circle" height="65" />
            <br />
            <span class="ShowHelpers">Show helpers</span>
        </button>
    </div>
}
else
{
    <div class="float-right">
        <button class="btn-add-helper" @onclick="() => hideLessonHelpersProfiles()">
            <img src="css\images\RightArrow.png" alt="hide helping hands" class="rounded-circle" height="65" />
            <br />
            <span class="HideHelpers">Hide helpers</span>
        </button>
    </div>
}


@if (showHelpersButtonPressed)
{
    <div class="float-right">
        <button class="btn-add-helper" @onclick="() => sendMessageTo()">
            <img src="css\images\Nuru.png" alt="Nuru" class="rounded-circle" height="65" />
            <br />
            <span class="name">Nuru</span>
        </button>
        <button class="btn-add-helper">
            <img src="css\images\Salim.png" alt="Salim" class="rounded-circle" height="65" />
            <br />
            <span class="name">Salim</span>
        </button>
    </div>

    @if (LessonsProfiles?.Length > 0)
    {
        @foreach (var lessonProfile in LessonsProfiles)
        {
            <div class="float-right">
                <button class="btn-add-helper">
                    @(lessonProfile.lessonNumber)
                    @(lessonProfile.Id)
                </button>
            </div>
        }
    }
}




@* ------------- Display Content of the Lesson -------------------*@
@if (ExistingLesson != null)
{
    <h2 class="display-4" style="color: rgb(7, 88, 50);">@(ExistingLesson.lessonTitle)</h2>

    <div class="video-teamh">
        <br /><br />
        <iframe width="560" height="315" src="@(ExistingLesson.videoUrl)" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        <br /><br />
    </div>
    @(ExistingLesson.text)
}




@code {
    [Parameter]
    public int LessonId { get; set; }

    private SEIIApp.Shared.DomainTdo.LessonDefinitionDto ExistingLesson { get; set; }
    private SEIIApp.Shared.DomainTdo.LessonProfilDefinitionDto[] LessonsProfiles { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (LessonId != 0)
        {

            ExistingLesson = await LessonDefinitionService.GetLessonById(LessonId);
        }
        await base.OnParametersSetAsync();

    }

    string myPicture = "";
    bool buttonPressed = false;
    bool showHelpersButtonPressed = false;
    string pressedStyle = "";

    void addUserToHelpingHands()
    {
        buttonPressed = !buttonPressed;

    }

    void removeUserFromHelpingHands()
    {
        buttonPressed = !buttonPressed;

    }

    private async Task getLessonHelpersProfiles()
    {
        showHelpersButtonPressed = !showHelpersButtonPressed;
        LessonsProfiles = await LessonProfileDefinitionService.GetLessonProfileDefinitionWithLessonNumber(LessonId);
    }
    private void hideLessonHelpersProfiles()
    {
        showHelpersButtonPressed = !showHelpersButtonPressed;
    }
    void sendMessageTo()
    {

        navigation.NavigateTo("/MessageToNuru/");
    }
}
